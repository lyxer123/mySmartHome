{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport Vue from 'vue';\nimport Router from 'vue-router';\nimport Dashboard from '../views/Dashboard.vue';\nimport Login from '../views/Login.vue';\nimport Register from '../views/Register.vue';\nVue.use(Router);\nconst router = new Router({\n  routes: [{\n    path: '/',\n    redirect: '/dashboard'\n  }, {\n    path: '/dashboard',\n    name: 'Dashboard',\n    component: Dashboard,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: '/login',\n    name: 'Login',\n    component: Login\n  }, {\n    path: '/register',\n    name: 'Register',\n    component: Register\n  }]\n});\nrouter.beforeEach((to, from, next) => {\n  const isAuthenticated = localStorage.getItem('token');\n  if (to.matched.some(record => record.meta.requiresAuth) && !isAuthenticated) {\n    next('/login');\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["Vue","Router","Dashboard","Login","Register","use","router","routes","path","redirect","name","component","meta","requiresAuth","beforeEach","to","from","next","isAuthenticated","localStorage","getItem","matched","some","record"],"sources":["E:/github/mySmartHome/frontend/src/router/index.js"],"sourcesContent":["import Vue from 'vue'\r\nimport Router from 'vue-router'\r\nimport Dashboard from '../views/Dashboard.vue'\r\nimport Login from '../views/Login.vue'\r\nimport Register from '../views/Register.vue'\r\n\r\nVue.use(Router)\r\n\r\nconst router = new Router({\r\n  routes: [\r\n    {\r\n      path: '/',\r\n      redirect: '/dashboard'\r\n    },\r\n    {\r\n      path: '/dashboard',\r\n      name: 'Dashboard',\r\n      component: Dashboard,\r\n      meta: { requiresAuth: true }\r\n    },\r\n    {\r\n      path: '/login',\r\n      name: 'Login',\r\n      component: Login\r\n    },\r\n    {\r\n      path: '/register',\r\n      name: 'Register',\r\n      component: Register\r\n    }\r\n  ]\r\n})\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  const isAuthenticated = localStorage.getItem('token')\r\n  \r\n  if (to.matched.some(record => record.meta.requiresAuth) && !isAuthenticated) {\r\n    next('/login')\r\n  } else {\r\n    next()\r\n  }\r\n})\r\n\r\nexport default router"],"mappings":";;AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,MAAM,MAAM,YAAY;AAC/B,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,QAAQ,MAAM,uBAAuB;AAE5CJ,GAAG,CAACK,GAAG,CAACJ,MAAM,CAAC;AAEf,MAAMK,MAAM,GAAG,IAAIL,MAAM,CAAC;EACxBM,MAAM,EAAE,CACN;IACEC,IAAI,EAAE,GAAG;IACTC,QAAQ,EAAE;EACZ,CAAC,EACD;IACED,IAAI,EAAE,YAAY;IAClBE,IAAI,EAAE,WAAW;IACjBC,SAAS,EAAET,SAAS;IACpBU,IAAI,EAAE;MAAEC,YAAY,EAAE;IAAK;EAC7B,CAAC,EACD;IACEL,IAAI,EAAE,QAAQ;IACdE,IAAI,EAAE,OAAO;IACbC,SAAS,EAAER;EACb,CAAC,EACD;IACEK,IAAI,EAAE,WAAW;IACjBE,IAAI,EAAE,UAAU;IAChBC,SAAS,EAAEP;EACb,CAAC;AAEL,CAAC,CAAC;AAEFE,MAAM,CAACQ,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,MAAMC,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAErD,IAAIL,EAAE,CAACM,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACX,IAAI,CAACC,YAAY,CAAC,IAAI,CAACK,eAAe,EAAE;IAC3ED,IAAI,CAAC,QAAQ,CAAC;EAChB,CAAC,MAAM;IACLA,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;AAEF,eAAeX,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}